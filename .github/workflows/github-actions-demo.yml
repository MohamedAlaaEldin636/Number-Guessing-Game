# The name of the workflow that appears on GitHub -> Actions Tab.
name: GitHub Actions Demo

# The name of the workflow Runs -> appear when you select the workflow name above.

# variables -> github represents github context -> actor means username of the user that triggered
# the initial workflow run.
# Contexts can be found here -> https://docs.github.com/en/actions/learn-github-actions/contexts
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀

# Trigger action, For a list of available triggers see -> https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
# To trigger push on specific branches only Use :-
# on:
#  push:
#    branches: # OR -> branches-ignore
#      - 'main'
#      - 'releases/**' # Push that starts with -> releases/
#    # another filter can be tags: not just branches: -> -v1.**
# ---- Another filter Ex. only run when a push affects a specific file
# on:
#   push:
#     paths: # also have paths-ignore
#       - '**.js' # -> For example, this workflow will run when someone pushes a change to a JavaScript file
# Note if you use both filters branches and files, then both must happen so it is an AND filter isa.
# also can be on multiple events isa -> on: [push, fork]
# ------
# for multiple events with filters
# on:
#  label:
#    types:
#      - created
#  push:
#    branches:
#      - main
#  page_build:
# -->> in case wanna include and exclude some branches at same time
# on:
#  pull_request:
#    branches:
#      - 'releases/**'
#      - '!releases/**-alpha' // Uses the ! prefix isa. // but don't use branches with branches-ignore isa.
# for schedule example see at the end of the file
on: [push]

jobs:
  # in case of sequential not concurrent jobs + if needs another job to successfully end first isa.
  # jobs:
  #  job1:
  #  job2:
  #    needs: job1
  #  job3:
  #    needs: [job1, job2]

  Explore-GitHub-Actions:
    # can have a name: Explore GitHub Actions since key of a job can't have spaces isa.

    # if: ${{ ! startsWith(github.ref, 'refs/tags/') }} $ only if condition happens isa.

    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

# Example on a simple job
# jobs:
#  my-job:
#    name: My Job
#    runs-on: ubuntu-latest
#    steps:
#      - name: Print a greeting
#        env:
#          MY_VAR: Hi there! My name is
#          FIRST_NAME: Mona
#          MIDDLE_NAME: The
#          LAST_NAME: Octocat
#        run: |
#          echo $MY_VAR $FIRST_NAME $MIDDLE_NAME $LAST_NAME.


# Example for schedule -> https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onschedule
# on:
#  schedule:
#    - cron: '30 5 * * 1,3'
#    - cron: '30 5 * * 2,4'
#
#jobs:
#  test_schedule:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Not on Monday or Wednesday
#        if: github.event.schedule != '30 5 * * 1,3'
#        run: echo "This step will be skipped on Monday and Wednesday"
#      - name: Every time
#        run: echo "This step will always run"
